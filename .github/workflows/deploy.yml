name: Deploy

on:
  push:
    branches:
      - deploy-action

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: UPPER to lower
        run: |
          echo "ACTOR_LOWER=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Git fetch for diff
        run: git fetch --prune --unshallow || true

      - name: Check frontend changes
        id: check_frontend
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^front/'; then
            echo "FRONTEND_CHANGED=true" >> $GITHUB_ENV
          else
            echo "FRONTEND_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Check backend changes
        id: check_backend
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^backend/'; then
            echo "BACKEND_CHANGED=true" >> $GITHUB_ENV
          else
            echo "BACKEND_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Stop if no changes
        run: |
          if [[ "$FRONTEND_CHANGED" == "false" && "$BACKEND_CHANGED" == "false" ]]; then
            echo "Aucun changement à déployer."
            exit 0
          fi

      - name: Docker login
        run: echo "${{ secrets.ghrcToken }}" | docker login ghcr.io -u ${{ secrets.ghrcUser }} --password-stdin

      - name: Build and push frontend
        if: env.FRONTEND_CHANGED == 'true'
        run: |
          touch ./front/.env
          echo "${{ secrets.ENVFRONT }}" >> ./front/.env
          docker build -f ./front/Dockerfile -t ghcr.io/${{ env.REPO_LOWER }}/frontend:latest ./front
          docker push ghcr.io/${{ env.REPO_LOWER }}/frontend:latest

      - name: Build and push backend
        if: env.BACKEND_CHANGED == 'true'
        run: |
          docker build -f ./backend/Dockerfile.prod -t ghcr.io/${{ env.REPO_LOWER }}/backend:latest ./backend
          docker push ghcr.io/${{ env.REPO_LOWER }}/backend:latest

      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/$(whoami)/tiermaster/setup-prod
            echo "${{ secrets.ghrcToken }}" | docker login ghcr.io -u ${{ secrets.ghrcUser }} --password-stdin
            git pull origin main
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d --remove-orphans
            docker image prune -f